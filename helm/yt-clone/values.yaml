# Default values for yt-clone
# This is a YAML-formatted file.

replicaCount: 3

image:
  repository: yt-clone
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: your-domain.com
      paths:
        - path: /
          pathType: Prefix
    - host: api.your-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: yt-clone-tls
      hosts:
        - your-domain.com
        - api.your-domain.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Backend specific values
backend:
  replicaCount: 3
  image:
    repository: yt-clone-backend
    tag: "latest"
  service:
    type: ClusterIP
    port: 3000
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Frontend specific values
frontend:
  replicaCount: 3
  image:
    repository: yt-clone-frontend
    tag: "latest"
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Database configuration
database:
  enabled: true
  type: postgresql
  host: "postgres-service"
  port: 5432
  name: "yt_clone"
  user: "postgres"
  ssl: true

# Redis configuration
redis:
  enabled: true
  host: "redis-service"
  port: 6379

# Environment variables
env:
  NODE_ENV: "production"
  PORT: "3000"
  JWT_EXPIRES_IN: "7d"
  VERIFICATION_TOKEN_EXPIRES_IN: "24h"
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_SECURE: "false"
  DB_SSL: "true"

# Secrets (should be provided via external secret management)
secrets:
  JWT_SECRET: ""
  DB_PASSWORD: ""
  SMTP_USER: ""
  SMTP_PASS: ""
  DB_HOST: ""
  DB_NAME: ""
  DB_USER: ""
  FRONTEND_URL: ""

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
