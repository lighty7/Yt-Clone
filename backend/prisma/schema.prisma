generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  posts      Post[]
  comments   Comment[]
  likes      Like[]
  loginLogs  LoginLog[]
}

model Post {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  content      String?
  videoUrl     String?  @map("video_url")
  thumbnailUrl String?  @map("thumbnail_url")
  description  String?
  views        Int      @default(0)
  likes        Int      @default(0)
  dislikes     Int      @default(0)
  duration     String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")
  user         User     @relation(fields: [userId], references: [id])
  comments     Comment[]
  likes_rel    Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int      @map("post_id")
  userId    Int      @map("user_id")
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int      @map("post_id")
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}

model LoginLog {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  action    String
  ipAddress String?  @map("ip_address")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])
}


